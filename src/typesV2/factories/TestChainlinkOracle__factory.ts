/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestChainlinkOracle,
  TestChainlinkOracleInterface,
} from "../TestChainlinkOracle";

const _abi = [
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRoundData",
    outputs: [
      {
        internalType: "uint80",
        name: "",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "",
        type: "uint80",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
    ],
    name: "setDecimals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_price",
        type: "int256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6305f5e1006000556001805460ff1916600817905560c0604052601e60808190527f41206d6f636b20436861696e6c696e6b2056332041676772656761746f72000060a0908152610053916002919061007d565b5060038055600480546001600160501b031916600117905534801561007757600080fd5b50610151565b82805461008990610116565b90600052602060002090601f0160209004810192826100ab57600085556100f1565b82601f106100c457805160ff19168380011785556100f1565b828001600101855582156100f1579182015b828111156100f15782518255916020019190600101906100d6565b506100fd929150610101565b5090565b5b808211156100fd5760008155600101610102565b600181811c9082168061012a57607f821691505b6020821081141561014b57634e487b7160e01b600052602260045260246000fd5b50919050565b6102e8806101606000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637a1395aa1161005b5780637a1395aa146100d2578063a035b1fe146100f8578063f7a3080614610101578063feaf968c1461011457600080fd5b8063313ce5671461008257806354fd4d50146100a65780637284e416146100bd575b600080fd5b60015461008f9060ff1681565b60405160ff90911681526020015b60405180910390f35b6100af60035481565b60405190815260200161009d565b6100c5610151565b60405161009d9190610222565b6100f66100e03660046101f8565b6001805460ff191660ff92909216919091179055565b005b6100af60005481565b6100f661010f3660046101df565b600055565b600454600080546040805169ffffffffffffffffffff9094168085526020850192909252830191909152426060830152608082015260a00161009d565b6002805461015e90610277565b80601f016020809104026020016040519081016040528092919081815260200182805461018a90610277565b80156101d75780601f106101ac576101008083540402835291602001916101d7565b820191906000526020600020905b8154815290600101906020018083116101ba57829003601f168201915b505050505081565b6000602082840312156101f157600080fd5b5035919050565b60006020828403121561020a57600080fd5b813560ff8116811461021b57600080fd5b9392505050565b600060208083528351808285015260005b8181101561024f57858101830151858201604001528201610233565b81811115610261576000604083870101525b50601f01601f1916929092016040019392505050565b600181811c9082168061028b57607f821691505b602082108114156102ac57634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212207e6f6761034ed4cfc845853bc3f1a62f7a3860c5e2073c3a80aa1ee2b5bcf74764736f6c63430008070033";

export class TestChainlinkOracle__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestChainlinkOracle> {
    return super.deploy(overrides || {}) as Promise<TestChainlinkOracle>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestChainlinkOracle {
    return super.attach(address) as TestChainlinkOracle;
  }
  connect(signer: Signer): TestChainlinkOracle__factory {
    return super.connect(signer) as TestChainlinkOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestChainlinkOracleInterface {
    return new utils.Interface(_abi) as TestChainlinkOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestChainlinkOracle {
    return new Contract(address, _abi, signerOrProvider) as TestChainlinkOracle;
  }
}
