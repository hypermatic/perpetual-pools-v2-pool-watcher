/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PoolSwapLibrary,
  PoolSwapLibraryInterface,
} from "../PoolSwapLibrary";

const _abi = [
  {
    inputs: [],
    name: "MAX_BURNING_FEE",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_MINTING_FEE",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ONE",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WAD_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "x",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "y",
        type: "bytes16",
      },
    ],
    name: "addBytes",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastPriceTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "frontRunningInterval",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updateInterval",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentUpdateIntervalId",
        type: "uint256",
      },
    ],
    name: "appropriateUpdateIntervalId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "oldPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "newPrice",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "longBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortBalance",
            type: "uint256",
          },
          {
            internalType: "bytes16",
            name: "leverageAmount",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "fee",
            type: "bytes16",
          },
        ],
        internalType: "struct PoolSwapLibrary.PriceChangeData",
        name: "priceChange",
        type: "tuple",
      },
    ],
    name: "calculatePriceChange",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "x",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "y",
        type: "bytes16",
      },
    ],
    name: "compareDecimals",
    outputs: [
      {
        internalType: "int8",
        name: "",
        type: "int8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "ratio",
        type: "bytes16",
      },
    ],
    name: "convertDecimalToUInt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "convertUIntToDecimal",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "a",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "b",
        type: "int256",
      },
    ],
    name: "divInt",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_wadValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_decimals",
        type: "uint256",
      },
    ],
    name: "fromWad",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shortBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "longBalance",
        type: "uint256",
      },
    ],
    name: "getBalancesAfterFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "price",
        type: "bytes16",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getBurn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "lossMultiplier",
        type: "bytes16",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "getLossAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "ratio",
        type: "bytes16",
      },
      {
        internalType: "int8",
        name: "direction",
        type: "int8",
      },
      {
        internalType: "bytes16",
        name: "leverage",
        type: "bytes16",
      },
    ],
    name: "getLossMultiplier",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "price",
        type: "bytes16",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pendingBurnPoolTokens",
        type: "uint256",
      },
    ],
    name: "getMintAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "price",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "oppositePrice",
        type: "bytes16",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBurnedInstantMint",
        type: "uint256",
      },
    ],
    name: "getMintWithBurns",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sideBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenSupply",
        type: "uint256",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numerator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_denominator",
        type: "uint256",
      },
    ],
    name: "getRatio",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "longPrice",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "shortPrice",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "currentUpdateIntervalId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updateIntervalId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longMintSettlement",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longBurnPoolTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortMintSettlement",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortBurnPoolTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longBurnShortMintPoolTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortBurnLongMintPoolTokens",
            type: "uint256",
          },
          {
            internalType: "bytes16",
            name: "burnFee",
            type: "bytes16",
          },
        ],
        internalType: "struct PoolSwapLibrary.UpdateData",
        name: "data",
        type: "tuple",
      },
    ],
    name: "getUpdatedAggregateBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "_newLongTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newShortTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_longBurnFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_shortBurnFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newSettlementTokens",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pendingBurnPoolTokens",
        type: "uint256",
      },
    ],
    name: "getWithdrawAmountOnBurn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastPriceTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updateInterval",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "frontRunningInterval",
        type: "uint256",
      },
    ],
    name: "isBeforeFrontRunningInterval",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "numerator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "mulFraction",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "x",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "y",
        type: "bytes16",
      },
    ],
    name: "multiplyBytes",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "a",
        type: "bytes16",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "multiplyDecimalByUInt",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "x",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "y",
        type: "bytes16",
      },
    ],
    name: "subtractBytes",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x61316f61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106101d95760003560e01c8063ab41556f1161010e578063cff70001116100ac578063e45639451161007b578063e45639451461044b578063fc3115811461045e578063fea3de3314610471578063ff9afe871461048457600080fd5b8063cff70001146103ea578063dc35bc13146103fd578063debb52df14610425578063dfdbe4da1461043857600080fd5b8063bf36f0e9116100e8578063bf36f0e9146103a5578063c15172d2146103b8578063c2ee3a08146103cb578063c3ff8091146103d757600080fd5b8063ab41556f1461036c578063aeb64d7d1461037f578063b6b2f9f61461039257600080fd5b8063664808a81161017b57806388b78aaa1161015557806388b78aaa146102da5780639eb17fa3146102eb578063a481c1b414610326578063a818c0d21461035957600080fd5b8063664808a8146102975780636fa1268e146102a657806381a799db146102b757600080fd5b8063202f1257116101b7578063202f12571461024b578063422051e71461025e57806345e7ef9b146102715780635cf4ee911461028457600080fd5b80630417cf8e146101de5780630e8418dd146101f95780631842c9d814610225575b600080fd5b6101e6601281565b6040519081526020015b60405180910390f35b61020c610207366004612d8f565b610497565b6040516001600160801b031990911681526020016101f0565b610238610233366004612d8f565b6104ac565b60405160009190910b81526020016101f0565b61020c610259366004612e79565b6104b8565b61020c61026c366004612e4f565b6104d4565b61020c61027f366004612d8f565b6104e8565b61020c610292366004612e79565b6104f4565b6101e6670de0b6b3a764000081565b61020c66201bb1a2bc2ec560c91b81565b6102ca6102c5366004612f0b565b61051c565b60405190151581526020016101f0565b61020c668075782dace9d960c71b81565b6102fe6102f9366004612eb3565b610540565b604080519586526020860194909452928401919091526060830152608082015260a0016101f0565b610339610334366004612e9b565b6106f5565b6040805194855260208501939093529183015260608201526080016101f0565b6101e6610367366004612e4f565b61085e565b6101e661037a366004612f0b565b610883565b6101e661038d366004612d74565b6108d7565b61020c6103a0366004612d8f565b6108e2565b6101e66103b3366004612e79565b6108ee565b6101e66103c6366004612dc2565b610913565b61020c613fff60f01b81565b61020c6103e5366004612e04565b61096c565b61020c6103f8366004612e79565b6109ac565b61041061040b366004612edf565b6109bb565b604080519283526020830191909152016101f0565b6101e6610433366004612f0b565b610a14565b61020c610446366004612ec6565b610a53565b6101e6610459366004612e4f565b610a5e565b6101e661046c366004612e4f565b610a9c565b6101e661047f366004612edf565b610ada565b6101e6610492366004612f3d565b610b26565b60006104a38383610c37565b90505b92915050565b60006104a38383610c49565b60006104a36104c684610d70565b6104cf84610d70565b610e03565b60006104a3836104e3846110ba565b61111e565b60006104a3838361111e565b6000816105075750613fff60f01b6104a6565b6104a3610513846110ba565b6104cf846110ba565b6000848261052a8587612f9c565b61053491906130e0565b1190505b949350505050565b6000806000806000856040013586606001351061056b575060009350839250829150819050806106ec565b60008060008860800135118061058657506000886101200135115b156105be576105bb61059b60208a018a612d74565b6105ab60408b0160208c01612d74565b8a608001358b6101200135610913565b96505b60a088013515610624576105e26105d860208a018a612d74565b8960a00135610a9c565b9150670de0b6b3a764000061060b61038d6106056101608c016101408d01612d74565b856104d4565b6106159190612fb4565b945061062185836130e0565b91505b60008860c00135118061063c57506000886101000135115b156106745761067161065460408a0160208b01612d74565b61066160208b018b612d74565b8a60c001358b6101000135610913565b95505b60e0880135156106dd5761069b61069160408a0160208b01612d74565b8960e00135610a9c565b9050670de0b6b3a76400006106c461038d6106be6101608c016101408d01612d74565b846104d4565b6106ce9190612fb4565b93506106da84826130e0565b90505b6106e78282612f9c565b925050505b91939590929450565b6000808080606085013560408601358261071560a0890160808a01612d74565b905087356020890135600061073060c08c0160a08d01612d74565b90506000670de0b6b3a764000061074a61038d84896104d4565b6107549190612fb4565b90506000670de0b6b3a764000061076e61038d858b6104d4565b6107789190612fb4565b905061078481896130e0565b975061079082886130e0565b9650600061079e85876104b8565b905060006107b182613fff60f01b6104ac565b905060006107c083838b61096c565b905060008260000b121580156107d6575060008b115b156108075760006107e7828d61085e565b90506107f3818d6130e0565b9b506107ff818c612f9c565b9a5050610847565b60008260000b12801561081a575060008a115b1561084757600061082b828c61085e565b9050610837818d612f9c565b9b50610843818c6130e0565b9a50505b50979e989d50919b50995095975050505050505050565b60006104a361087e610875613fff60f01b86610c37565b6104e3856110ba565b611379565b600082158061089957506108978286612f9c565b155b806108a2575083155b156108ae575082610538565b82846108ba8488612f9c565b6108c491906130c1565b6108ce9190612fb4565b95945050505050565b60006104a682611379565b60006104a383836113fc565b6000806108fc8360126130e0565b61090790600a613019565b90506105388185612fb4565b60006001600160801b031985166109455760405162461bcd60e51b815260040161093c90612f78565b60405180910390fd5b8115610962576109558483610a9c565b61095f9084612f9c565b92505b6108ce8584610a5e565b60006109a261099d836104e360008760000b1261099757610992613fff60f01b89610e03565b6117bc565b876117bc565b61196c565b90505b9392505050565b600081610507575060006104a6565b600080806109cd856103f88682612f9c565b905060006109de61038d83896104d4565b905060006109ec82886130e0565b905060006109fa838a6130e0565b610a0490886130e0565b9199919850909650505050505050565b6000821580610a2a5750610a288286612f9c565b155b80610a33575083155b15610a3f575082610538565b610a498286612f9c565b6108c485856130c1565b60006104a6826110ba565b60006001600160801b03198316610a875760405162461bcd60e51b815260040161093c90612f78565b6104a361087e610a96846110ba565b85610e03565b60006001600160801b03198316610ac55760405162461bcd60e51b815260040161093c90612f78565b6104a361087e610ad4846110ba565b8561111e565b600081610ae9575060006109a5565b6000610b00610af7866110ba565b6104e3866110ba565b90506000610b11826104cf866110ba565b9050610b1c816108d7565b9695505050505050565b600085851115610b705760405162461bcd60e51b81526020600482015260156024820152741d1a5b595cdd185b5c081a5b881d1a19481c185cdd605a1b604482015260640161093c565b828411610c0657610b838686858761051c565b15610b8f5750806108ce565b600083610b9c87896130e0565b610ba69190612fb4565b905060008585610bb7846001612f9c565b610bc191906130c1565b610bcb9089612f9c565b610bd591906130e0565b9050808810610bfc57610be88285612f9c565b610bf3906001612f9c565b925050506108ce565b610bf38285612f9c565b6000610c128588612f9c565b9050600084610c2188846130e0565b610c2b9190612fb4565b9050610bf38185612f9c565b60006104a383600160ff1b84186113fc565b600060016001607f1b03608084901c16617fff60701b811115610c6b57600080fd5b60016001607f1b03608084901c16617fff60701b811115610c8b57600080fd5b6001600160801b0319858116908516141580610cb45750617fff60701b826001600160801b0316105b610cbd57600080fd5b6001600160801b03198581169085161415610cdd576000925050506104a6565b6001607f1b608086811c82118015929187901c919091101590610d2f578015610d2057826001600160801b0316846001600160801b031611610d20576001610d24565b6000195b9450505050506104a6565b8015610d425760019450505050506104a6565b826001600160801b0316846001600160801b031611610d6357600019610d24565b60019450505050506104a6565b600081610d7f57506000919050565b6000808313610d915782600003610d93565b825b90506000610da082612cbe565b90506070811015610db9578060700382901b9150610dcc565b6070811115610dcc576070810382901c91505b6001600160701b03909116613fff820160701b17906000841215610df4576001607f1b821791505b5060801b92915050565b919050565b6000617fff60f084811c8216919084901c811690821415610e495780617fff1415610e38575061ffff60ef1b91506104a69050565b505050600160ff1b811682186104a6565b80617fff1415610e8d576dffffffffffffffffffffffffffff60801b841615610e7c575061ffff60ef1b91506104a69050565b505050808218600160ff1b166104a6565b600160801b600160ff1b038416610ed757600160801b600160ff1b038516610ebf575061ffff60ef1b91506104a69050565b505050808218600160ff1b16617fff60f01b176104a6565b6001600160701b03608085901c1681610ef35760019150610efa565b600160701b175b6001600160701b03608087901c1683610f39578015610f34576000610f1e82612cbe565b6001955060e20393840160711901939190911b90505b610f43565b600160701b1760721b5b818181610f5257610f52613123565b04905080610f7e57600160ff1b87871816610f6e576000610d24565b600160ff1b9450505050506104a6565b6001606c1b811015610f9257610f926130f7565b6000600160731b821015610fd157600160721b821015610fc657600160711b821015610fbf576070610fc9565b6071610fc9565b60725b60ff16610fda565b610fda82612cbe565b905083614071018186011115610ff857617fff94506000915061108b565b83818601613ffc01101561101357600094506000915061108b565b83818601613f8c011015611060578385613ffc01111561103e578385613ffc010382901b9150611057565b8385613ffc01101561105757613ffc8585030382901c91505b6000945061108b565b6070811115611073576070810382901c91505b6001600160701b038216915083818601613f8d010394505b81607086901b888a186001607f1b60801b1660801c6001600160801b0316171760801b955050505050506104a6565b6000816110c957506000919050565b8160006110d582612cbe565b905060708110156110ee578060700382901b9150611101565b6070811115611101576070810382901c91505b613fff0160701b6001600160701b03919091161760801b92915050565b6000617fff60f084811c8216919084901c8116908214156111bd5780617fff141561119c576001600160801b0319858116908516141561116957505050600160ff1b811682186104a6565b600160ff1b6001600160801b031986861816141561118c575050508181176104a6565b5061ffff60ef1b91506104a69050565b600160801b600160ff1b038416610e38575061ffff60ef1b91506104a69050565b80617fff14156111f957600160801b600160ff1b0385166111e8575061ffff60ef1b91506104a69050565b505050600160ff1b821681186104a6565b6001600160701b03608086901c1682611215576001925061121c565b600160701b175b6001600160701b03608086901c1682611238576001925061123f565b600160701b175b908102908161125c57600160ff1b87871816610f6e576000610d24565b928201926000600160e11b83101561128f57600160e01b8310156112885761128383612cbe565b611292565b60e0611292565b60e15b905061407081860110156112ad57600094506000925061134a565b6140e081860110156112f0576140708510156112d257846140700383901c92506112e7565b6140708511156112e757614070850383901b92505b6000945061134a565b61c0dd818601111561130a57617fff94506000925061134a565b6070811115611321576070810383901c9250611334565b6070811015611334578060700383901b92505b6001600160701b03831692506140df8186010394505b82607086901b888a186001607f1b60801b1660801c6001600160801b0316171760801b955050505050506104a6565b6000617fff60f083901c16613fff8110156113975750600092915050565b6001607f1b608084901c106113ab57600080fd5b6140fe8111156113ba57600080fd5b600160701b6001600160701b03608085901c161761406f8210156113e45761406f8290031c6109a5565b61406f8211156109a55761406e1982011b9392505050565b6000617fff60f084811c8216919084901c81169082141561144a5780617fff1415611440576001600160801b0319858116908516141561118c5784925050506104a6565b84925050506104a6565b80617fff141561145e5783925050506104a6565b6001607f1b608086901c90811015906001600160701b031683611484576001935061148b565b600160701b175b6001607f1b608087901c90811015906001600160701b0316846114b157600194506114b8565b600160701b175b826114e8576001600160801b03198816600160ff1b146114d857876114db565b60005b96505050505050506104a6565b80611508576001600160801b03198916600160ff1b146114d857886114db565b848603841515831515141561161357607081131561152f57899750505050505050506104a6565b60008113156115415790811c90611570565b606f1981121561155a57889750505050505050506104a6565b6000811215611570578060000384901c93508596505b92810192600160711b841061158b576001968701969390931c925b86617fff14156115bd57846115a557617fff60f01b6115af565b6001600160f01b03195b9750505050505050506104a6565b600160701b8410156115d257600096506115df565b6001600160701b03841693505b83607088901b866115f15760006115f7565b6001607f1b5b6001600160801b0316171760801b9750505050505050506104a6565b600081131561162e57600184901b9350600187039650611645565b600081121561164557600182901b91506001860396505b607081131561165757600191506116a4565b6001811315611674576001810360018303901c60010191506116a4565b606f1981121561168757600193506116a4565b6000198112156116a4576001816000030360018503901c60010193505b8184106116b55781840393506116be565b83820393508294505b836116d45750600096506104a695505050505050565b60006116df85612cbe565b9050806071141561170557600185901c6001600160701b03169450600188019750611754565b607081101561174757607081900380891115611734578086901b6001600160701b031695508089039850611741565b600098600019019590951b945b50611754565b6001600160701b03851694505b87617fff1415611787578561176e57617fff60f01b611778565b6001600160f01b03195b985050505050505050506104a6565b84607089901b8761179957600061179f565b6001607f1b5b6001600160801b0316171760801b985050505050505050506104a6565b60006001607f1b608083901c11156117da575061ffff60ef1b919050565b613fff60f01b6001600160801b0319831614156117f957506000919050565b617fff60f083901c811690811415611812575090919050565b6001600160701b03608084901c168161182e5760019150611835565b600160701b175b8061184b57506001600160f01b03199392505050565b600061406f81613fff85106118715750600f9290921b9160009150613ffe1984016118b0565b60019250600160701b84106118935784613ffe039050600f84901b93506118b0565b600061189e85612cbe565b607f8190039590951b9461406d039150505b836001607f1b14156118e45782156118c6576001015b60006118d182612cbe565b60700392839003929190911b9050611932565b6000836118f25760006118f5565b60015b60ff1690505b600160701b8210156119305793800260ff81901c607f81019190911c94600019939093019260019290921b90821801906118fb565b505b806001600160701b0316607083901b8461194d576000611953565b6001607f1b5b6001600160801b0316171760801b979650505050505050565b60006001607f1b608083901c90811190617fff60f085901c8116916001600160701b0316908214801561199e57508015155b156119b2575061ffff60ef1b949350505050565b61400d8211156119d757826119cc57617fff60f01b6108ce565b600095945050505050565b613f7f8210156119f05750613fff60f01b949350505050565b816119fe5760019150611a05565b600160701b175b613fef821115611a1b57613fee1982011b611a2d565b613fef821015611a2d57613fef8290031c5b828015611a3e575061203760811b81115b15611a4e57506000949350505050565b82158015611a6d5750713fffffffffffffffffffffffffffffffffff81115b15611a815750617fff60f01b949350505050565b6001600160801b0381169060801c838015611a9b57508115155b15611aa7579019906001015b6001607f1b82811615611acb5770016a09e667f3bcc908b2fb1366ea957d3e0260801c5b6001607e1b831615611aee577001306fe0a31b7152de8d5a46305c85edec0260801c5b6001607d1b831615611b11577001172b83c7d517adcdf7c8c50eb14a791f0260801c5b6001607c1b831615611b345770010b5586cf9890f6298b92b71842a983630260801c5b6001607b1b831615611b57577001059b0d31585743ae7c548eb68ca417fd0260801c5b6001607a1b831615611b7a57700102c9a3e778060ee6f7caca4f7a29bde80260801c5b600160791b831615611b9d5770010163da9fb33356d84a66ae336dcdfa3f0260801c5b600160781b831615611bc057700100b1afa5abcbed6129ab13ec11dc95430260801c5b600160771b831615611be35770010058c86da1c09ea1ff19d294cf2f679b0260801c5b600160761b831615611c06577001002c605e2e8cec506d21bfc89a23a00f0260801c5b600160751b831615611c2957700100162f3904051fa128bca9c55c31e5df0260801c5b600160741b831615611c4c577001000b175effdc76ba38e31671ca9397250260801c5b600160731b831615611c6f57700100058ba01fb9f96d6cacd4b180917c3d0260801c5b600160721b831615611c925770010002c5cc37da9491d0985c348c68e7b30260801c5b600160711b831615611cb5577001000162e525ee054754457d59952920260260801c5b600160701b831615611cd85770010000b17255775c040618bf4a4ade83fc0260801c5b6001606f1b831615611cfb577001000058b91b5bc9ae2eed81e9b7d4cfab0260801c5b6001606e1b831615611d1e57700100002c5c89d5ec6ca4d7c8acc017b7c90260801c5b6001606d1b831615611d415770010000162e43f4f831060e02d839a9d16d0260801c5b6001606c1b831615611d6457700100000b1721bcfc99d9f890ea069117630260801c5b6001606b1b831615611d875770010000058b90cf1e6d97f9ca14dbcc16280260801c5b6001606a1b831615611daa577001000002c5c863b73f016468f6bac5ca2b0260801c5b600160691b831615611dcd57700100000162e430e5a18f6119e3c02282a50260801c5b600160681b831615611df0577001000000b1721835514b86e6d96efd1bfe0260801c5b600160671b831615611e1357700100000058b90c0b48c6be5df846c5b2ef0260801c5b600160661b831615611e365770010000002c5c8601cc6b9e94213c72737a0260801c5b600160651b831615611e59577001000000162e42fff037df38aa2b219f060260801c5b600160641b831615611e7c5770010000000b17217fba9c739aa5819f44f90260801c5b600160631b831615611e9f577001000000058b90bfcdee5acd3c1cedc8230260801c5b600160621b831615611ec257700100000002c5c85fe31f35a6a30da1be500260801c5b600160611b831615611ee55770010000000162e42ff0999ce3541b9fffcf0260801c5b600160601b831615611f0857700100000000b17217f80f4ef5aadda455540260801c5b6001605f1b831615611f2b5770010000000058b90bfbf8479bd5a81b51ad0260801c5b6001605e1b831615611f4e577001000000002c5c85fdf84bd62ae30a74cc0260801c5b6001605d1b831615611f7157700100000000162e42fefb2fed257559bdaa0260801c5b6001605c1b831615611f94577001000000000b17217f7d5a7716bba4a9ae0260801c5b6001605b1b831615611fb757700100000000058b90bfbe9ddbac5e109cce0260801c5b6001605a1b831615611fda5770010000000002c5c85fdf4b15de6f17eb0d0260801c5b600160591b831615611ffd577001000000000162e42fefa494f1478fde050260801c5b600160581b8316156120205770010000000000b17217f7d20cf927c8e94c0260801c5b600160571b831615612043577001000000000058b90bfbe8f71cb4e4b33d0260801c5b600160561b83161561206657700100000000002c5c85fdf477b662b269450260801c5b600160551b8316156120895770010000000000162e42fefa3ae53369388c0260801c5b600160541b8316156120ac57700100000000000b17217f7d1d351a389d400260801c5b600160531b8316156120cf5770010000000000058b90bfbe8e8b2d3d4ede0260801c5b600160521b8316156120f2577001000000000002c5c85fdf4741bea6e77e0260801c5b600160511b83161561211557700100000000000162e42fefa39fe95583c20260801c5b600160501b831615612138577001000000000000b17217f7d1cfb72b45e10260801c5b698000000000000000000083161561216157700100000000000058b90bfbe8e7cc35c3f00260801c5b694000000000000000000083161561218a5770010000000000002c5c85fdf473e242ea380260801c5b69200000000000000000008316156121b3577001000000000000162e42fefa39f02b772c0260801c5b69100000000000000000008316156121dc5770010000000000000b17217f7d1cf7d83c1a0260801c5b6908000000000000000000831615612205577001000000000000058b90bfbe8e7bdcbe2e0260801c5b690400000000000000000083161561222e57700100000000000002c5c85fdf473dea871f0260801c5b69020000000000000000008316156122575770010000000000000162e42fefa39ef44d910260801c5b690100000000000000000083161561228057700100000000000000b17217f7d1cf79e9490260801c5b688000000000000000008316156122a85770010000000000000058b90bfbe8e7bce5440260801c5b684000000000000000008316156122d0577001000000000000002c5c85fdf473de6eca0260801c5b682000000000000000008316156122f857700100000000000000162e42fefa39ef366f0260801c5b68100000000000000000831615612320577001000000000000000b17217f7d1cf79afa0260801c5b6808000000000000000083161561234857700100000000000000058b90bfbe8e7bcd6d0260801c5b680400000000000000008316156123705770010000000000000002c5c85fdf473de6b20260801c5b68020000000000000000831615612398577001000000000000000162e42fefa39ef3580260801c5b600160401b8316156123bb5770010000000000000000b17217f7d1cf79ab0260801c5b6780000000000000008316156123e2577001000000000000000058b90bfbe8e7bcd50260801c5b67400000000000000083161561240957700100000000000000002c5c85fdf473de6a0260801c5b6720000000000000008316156124305770010000000000000000162e42fefa39ef340260801c5b67100000000000000083161561245757700100000000000000000b17217f7d1cf7990260801c5b67080000000000000083161561247e5770010000000000000000058b90bfbe8e7bcc0260801c5b6704000000000000008316156124a5577001000000000000000002c5c85fdf473de50260801c5b6702000000000000008316156124cc57700100000000000000000162e42fefa39ef20260801c5b6701000000000000008316156124f3577001000000000000000000b17217f7d1cf780260801c5b668000000000000083161561251957700100000000000000000058b90bfbe8e7bb0260801c5b664000000000000083161561253f5770010000000000000000002c5c85fdf473dd0260801c5b6620000000000000831615612565577001000000000000000000162e42fefa39ee0260801c5b661000000000000083161561258b5770010000000000000000000b17217f7d1cf60260801c5b66080000000000008316156125b1577001000000000000000000058b90bfbe8e7a0260801c5b66040000000000008316156125d757700100000000000000000002c5c85fdf473c0260801c5b66020000000000008316156125fd5770010000000000000000000162e42fefa39d0260801c5b660100000000000083161561262357700100000000000000000000b17217f7d1ce0260801c5b658000000000008316156126485770010000000000000000000058b90bfbe8e60260801c5b6540000000000083161561266d577001000000000000000000002c5c85fdf4720260801c5b6520000000000083161561269257700100000000000000000000162e42fefa380260801c5b651000000000008316156126b7577001000000000000000000000b17217f7d1b0260801c5b650800000000008316156126dc57700100000000000000000000058b90bfbe8d0260801c5b650400000000008316156127015770010000000000000000000002c5c85fdf460260801c5b65020000000000831615612726577001000000000000000000000162e42fefa20260801c5b6501000000000083161561274b5770010000000000000000000000b17217f7d00260801c5b64800000000083161561276f577001000000000000000000000058b90bfbe70260801c5b64400000000083161561279357700100000000000000000000002c5c85fdf30260801c5b6420000000008316156127b75770010000000000000000000000162e42fef90260801c5b6410000000008316156127db57700100000000000000000000000b17217f7c0260801c5b6408000000008316156127ff5770010000000000000000000000058b90bfbd0260801c5b640400000000831615612823577001000000000000000000000002c5c85fde0260801c5b64020000000083161561284757700100000000000000000000000162e42fee0260801c5b64010000000083161561286b577001000000000000000000000000b17217f60260801c5b638000000083161561288e57700100000000000000000000000058b90bfa0260801c5b63400000008316156128b15770010000000000000000000000002c5c85fc0260801c5b63200000008316156128d4577001000000000000000000000000162e42fd0260801c5b63100000008316156128f75770010000000000000000000000000b17217e0260801c5b630800000083161561291a577001000000000000000000000000058b90be0260801c5b630400000083161561293d57700100000000000000000000000002c5c85e0260801c5b63020000008316156129605770010000000000000000000000000162e42e0260801c5b630100000083161561298357700100000000000000000000000000b172160260801c5b628000008316156129a55770010000000000000000000000000058b90a0260801c5b624000008316156129c7577001000000000000000000000000002c5c840260801c5b622000008316156129e957700100000000000000000000000000162e410260801c5b62100000831615612a0b577001000000000000000000000000000b17200260801c5b62080000831615612a2d57700100000000000000000000000000058b8f0260801c5b62040000831615612a4f5770010000000000000000000000000002c5c70260801c5b62020000831615612a71577001000000000000000000000000000162e30260801c5b62010000831615612a935770010000000000000000000000000000b1710260801c5b618000831615612ab4577001000000000000000000000000000058b80260801c5b614000831615612ad557700100000000000000000000000000002c5b0260801c5b612000831615612af65770010000000000000000000000000000162d0260801c5b611000831615612b1757700100000000000000000000000000000b160260801c5b610800831615612b385770010000000000000000000000000000058a0260801c5b610400831615612b59577001000000000000000000000000000002c40260801c5b610200831615612b7a577001000000000000000000000000000001610260801c5b610100831615612b9b577001000000000000000000000000000000b00260801c5b6080831615612bbb577001000000000000000000000000000000570260801c5b6040831615612bdb5770010000000000000000000000000000002b0260801c5b6020831615612bfb577001000000000000000000000000000000150260801c5b6010831615612c1b5770010000000000000000000000000000000a0260801c5b6008831615612c3b577001000000000000000000000000000000040260801c5b6004831615612c5b577001000000000000000000000000000000010260801c5b84612c7c57600f81901c6001600160701b03169050613fff82019150612cab565b613ffe8211612ca157600f81901c6001600160701b0316905081613fff039150612cab565b600091613fee19011c5b60709190911b1760801b95945050505050565b6000808211612ccc57600080fd5b6000600160801b8310612ce157608092831c92015b600160401b8310612cf457604092831c92015b6401000000008310612d0857602092831c92015b620100008310612d1a57601092831c92015b6101008310612d2b57600892831c92015b60108310612d3b57600492831c92015b60048310612d4b57600292831c92015b600283106104a65760010192915050565b80356001600160801b031981168114610dfe57600080fd5b600060208284031215612d8657600080fd5b6104a382612d5c565b60008060408385031215612da257600080fd5b612dab83612d5c565b9150612db960208401612d5c565b90509250929050565b60008060008060808587031215612dd857600080fd5b612de185612d5c565b9350612def60208601612d5c565b93969395505050506040820135916060013590565b600080600060608486031215612e1957600080fd5b612e2284612d5c565b925060208401358060000b8114612e3857600080fd5b9150612e4660408501612d5c565b90509250925092565b60008060408385031215612e6257600080fd5b612e6b83612d5c565b946020939093013593505050565b60008060408385031215612e8c57600080fd5b50508035926020909101359150565b600060c08284031215612ead57600080fd5b50919050565b60006101608284031215612ead57600080fd5b600060208284031215612ed857600080fd5b5035919050565b600080600060608486031215612ef457600080fd5b505081359360208301359350604090920135919050565b60008060008060808587031215612f2157600080fd5b5050823594602084013594506040840135936060013592509050565b600080600080600060a08688031215612f5557600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b6020808252600a908201526907072696365203d3d20360b41b604082015260600190565b60008219821115612faf57612faf61310d565b500190565b600082612fd157634e487b7160e01b600052601260045260246000fd5b500490565b600181815b80851115613011578160001904821115612ff757612ff761310d565b8085161561300457918102915b93841c9390800290612fdb565b509250929050565b60006104a3838360008261302f575060016104a6565b8161303c575060006104a6565b8160018114613052576002811461305c57613078565b60019150506104a6565b60ff84111561306d5761306d61310d565b50506001821b6104a6565b5060208310610133831016604e8410600b841016171561309b575081810a6104a6565b6130a58383612fd6565b80600019048211156130b9576130b961310d565b029392505050565b60008160001904831182151516156130db576130db61310d565b500290565b6000828210156130f2576130f261310d565b500390565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fdfea2646970667358221220bd1523174655359e65f366ab08593cd5ee3d67e2e3987bea62b0252f6feefb9064736f6c63430008070033";

export class PoolSwapLibrary__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PoolSwapLibrary> {
    return super.deploy(overrides || {}) as Promise<PoolSwapLibrary>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PoolSwapLibrary {
    return super.attach(address) as PoolSwapLibrary;
  }
  connect(signer: Signer): PoolSwapLibrary__factory {
    return super.connect(signer) as PoolSwapLibrary__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolSwapLibraryInterface {
    return new utils.Interface(_abi) as PoolSwapLibraryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolSwapLibrary {
    return new Contract(address, _abi, signerOrProvider) as PoolSwapLibrary;
  }
}
