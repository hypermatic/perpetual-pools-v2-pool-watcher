/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PoolSwapLibrary,
  PoolSwapLibraryInterface,
} from "../PoolSwapLibrary";

const _abi = [
  {
    inputs: [],
    name: "MAX_DECIMALS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WAD_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastPriceTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "frontRunningInterval",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updateInterval",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentUpdateIntervalId",
        type: "uint256",
      },
    ],
    name: "appropriateUpdateIntervalId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "oldPrice",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "newPrice",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "longBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortBalance",
            type: "uint256",
          },
          {
            internalType: "bytes16",
            name: "leverageAmount",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "fee",
            type: "bytes16",
          },
        ],
        internalType: "struct PoolSwapLibrary.PriceChangeData",
        name: "priceChange",
        type: "tuple",
      },
    ],
    name: "calculatePriceChange",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "x",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "y",
        type: "bytes16",
      },
    ],
    name: "compareDecimals",
    outputs: [
      {
        internalType: "int8",
        name: "",
        type: "int8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "ratio",
        type: "bytes16",
      },
    ],
    name: "convertDecimalToUInt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "convertUIntToDecimal",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "a",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "b",
        type: "int256",
      },
    ],
    name: "divInt",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_wadValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_decimals",
        type: "uint256",
      },
    ],
    name: "fromWad",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shortBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "longBalance",
        type: "uint256",
      },
    ],
    name: "getBalancesAfterFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "price",
        type: "bytes16",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getBurn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "lossMultiplier",
        type: "bytes16",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "getLossAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "ratio",
        type: "bytes16",
      },
      {
        internalType: "int8",
        name: "direction",
        type: "int8",
      },
      {
        internalType: "bytes16",
        name: "leverage",
        type: "bytes16",
      },
    ],
    name: "getLossMultiplier",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "price",
        type: "bytes16",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shadowBalance",
        type: "uint256",
      },
    ],
    name: "getMintAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "price",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "oppositePrice",
        type: "bytes16",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountBurnedInstantMint",
        type: "uint256",
      },
    ],
    name: "getMintWithBurns",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sideBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenSupply",
        type: "uint256",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numerator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_denominator",
        type: "uint256",
      },
    ],
    name: "getRatio",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes16",
            name: "longPrice",
            type: "bytes16",
          },
          {
            internalType: "bytes16",
            name: "shortPrice",
            type: "bytes16",
          },
          {
            internalType: "uint256",
            name: "currentUpdateIntervalId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updateIntervalId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longMintAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longBurnAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortMintAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortBurnAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "longBurnShortMintAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "shortBurnLongMintAmount",
            type: "uint256",
          },
          {
            internalType: "bytes16",
            name: "burnFee",
            type: "bytes16",
          },
        ],
        internalType: "struct PoolSwapLibrary.UpdateData",
        name: "data",
        type: "tuple",
      },
    ],
    name: "getUpdatedAggregateBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "_newLongTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newShortTokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_longBurnFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_shortBurnFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newSettlementTokens",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shadowBalance",
        type: "uint256",
      },
    ],
    name: "getWithdrawAmountOnBurn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subjectTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastPriceTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "updateInterval",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "frontRunningInterval",
        type: "uint256",
      },
    ],
    name: "isBeforeFrontRunningInterval",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "numerator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "mulFraction",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "a",
        type: "bytes16",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "multiplyDecimalByUInt",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "one",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61308461003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106101625760003560e01c8063aeb64d7d116100cd578063debb52df11610086578063debb52df14610353578063dfdbe4da14610366578063e456394514610379578063fc3115811461038c578063fea3de331461039f578063ff9afe87146103b257600080fd5b8063aeb64d7d146102cc578063bf36f0e9146102df578063c15172d2146102f2578063c3ff809114610305578063cff7000114610318578063dc35bc131461032b57600080fd5b806381a799db1161011f57806381a799db14610209578063901717d11461022c5780639eb17fa314610238578063a481c1b414610273578063a818c0d2146102a6578063ab41556f146102b957600080fd5b80630417cf8e146101675780631842c9d814610182578063202f1257146101a8578063422051e7146101d45780635cf4ee91146101e7578063664808a8146101fa575b600080fd5b61016f601281565b6040519081526020015b60405180910390f35b610195610190366004612ca4565b6103c5565b60405160009190910b8152602001610179565b6101bb6101b6366004612d8e565b6103da565b6040516001600160801b03199091168152602001610179565b6101bb6101e2366004612d64565b6103f6565b6101bb6101f5366004612d8e565b61040a565b61016f670de0b6b3a764000081565b61021c610217366004612e20565b610432565b6040519015158152602001610179565b6101bb613fff60f01b81565b61024b610246366004612dc8565b610456565b604080519586526020860194909452928401919091526060830152608082015260a001610179565b610286610281366004612db0565b61060c565b604080519485526020850193909352918301526060820152608001610179565b61016f6102b4366004612d64565b610775565b61016f6102c7366004612e20565b61079a565b61016f6102da366004612c89565b610801565b61016f6102ed366004612d8e565b61080c565b61016f610300366004612cd7565b610831565b6101bb610313366004612d19565b610893565b6101bb610326366004612d8e565b6108d3565b61033e610339366004612df4565b6108e2565b60408051928352602083019190915201610179565b61016f610361366004612e20565b61093b565b6101bb610374366004612ddb565b61098a565b61016f610387366004612d64565b610995565b61016f61039a366004612d64565b6109d3565b61016f6103ad366004612df4565b610a11565b61016f6103c0366004612e52565b610a53565b60006103d18383610b3e565b90505b92915050565b60006103d16103e884610c65565b6103f184610c65565b610cf8565b60006103d18361040584610faf565b611013565b60008161041d5750613fff60f01b6103d4565b6103d161042984610faf565b6103f184610faf565b600084826104408587612eb1565b61044a9190612ff5565b1190505b949350505050565b600080600080600085604001358660600135141561048257506000935083925082915081905080610603565b60008060008860800135118061049d57506000886101200135115b156104d5576104d26104b260208a018a612c89565b6104c260408b0160208c01612c89565b8a608001358b6101200135610831565b96505b60a08801351561053b576104f96104ef60208a018a612c89565b8960a001356109d3565b9150670de0b6b3a76400006105226102da61051c6101608c016101408d01612c89565b856103f6565b61052c9190612ec9565b94506105388583612ff5565b91505b60008860c00135118061055357506000886101000135115b1561058b5761058861056b60408a0160208b01612c89565b61057860208b018b612c89565b8a60c001358b6101000135610831565b95505b60e0880135156105f4576105b26105a860408a0160208b01612c89565b8960e001356109d3565b9050670de0b6b3a76400006105db6102da6105d56101608c016101408d01612c89565b846103f6565b6105e59190612ec9565b93506105f18482612ff5565b90505b6105fe8282612eb1565b925050505b91939590929450565b6000808080606085013560408601358261062c60a0890160808a01612c89565b905087356020890135600061064760c08c0160a08d01612c89565b90506000670de0b6b3a76400006106616102da84896103f6565b61066b9190612ec9565b90506000670de0b6b3a76400006106856102da858b6103f6565b61068f9190612ec9565b905061069b8189612ff5565b97506106a78288612ff5565b965060006106b585876103da565b905060006106c882613fff60f01b6103c5565b905060006106d783838b610893565b905060008260000b121580156106ed575060008b115b1561071e5760006106fe828d610775565b905061070a818d612ff5565b9b50610716818c612eb1565b9a505061075e565b60008260000b128015610731575060008a115b1561075e576000610742828c610775565b905061074e818d612eb1565b9b5061075a818c612ff5565b9a50505b50979e989d50919b50995095975050505050505050565b60006103d161079561078c613fff60f01b8661126e565b61040585610faf565b611280565b60008215806107b057506107ae8286612eb1565b155b806107b9575083155b156107c557508261044e565b60006107e56107dc6107d78589612eb1565b610faf565b61040587610faf565b90506107f7610795826103f187610faf565b9695505050505050565b60006103d482611280565b60008061081a836012612ff5565b61082590600a612f2e565b905061044e8185612ec9565b60006001600160801b031985166108635760405162461bcd60e51b815260040161085a90612e8d565b60405180910390fd5b81156108805761087384836109d3565b61087d9084612eb1565b92505b61088a8584610995565b95945050505050565b60006108c96108c48361040560008760000b126108be576108b9613fff60f01b89610cf8565b611303565b87611303565b6114b3565b90505b9392505050565b60008161041d575060006103d4565b600080806108f4856103268682612eb1565b905060006109056102da83896103f6565b905060006109138288612ff5565b90506000610921838a612ff5565b61092b9088612ff5565b9199919850909650505050505050565b6000821580610951575061094f8286612eb1565b155b8061095a575083155b1561096657508261044e565b60006109746107dc85610faf565b90506107f7610795826103f16107d7878b612eb1565b60006103d482610faf565b60006001600160801b031983166109be5760405162461bcd60e51b815260040161085a90612e8d565b6103d16107956109cd84610faf565b85610cf8565b60006001600160801b031983166109fc5760405162461bcd60e51b815260040161085a90612e8d565b6103d1610795610a0b84610faf565b85611013565b600081610a20575060006108cc565b6000610a37610a2e86610faf565b61040586610faf565b90506000610a48826103f186610faf565b90506107f781610801565b600084861015610a9d5760405162461bcd60e51b81526020600482015260156024820152741d1a5b595cdd185b5c081a5b881d1a19481c185cdd605a1b604482015260640161085a565b828411610ace57610ab086868587610432565b15610abc57508061088a565b610ac7826001612eb1565b905061088a565b6000610add6107958686612805565b90506000610aec826001612eb1565b610af69086612fd6565b610b009088612eb1565b90506000610b0e8386612eb1565b905081610b1b888b612eb1565b11610b265780610b31565b610b31816001612eb1565b9998505050505050505050565b600060016001607f1b03608084901c16617fff60701b811115610b6057600080fd5b60016001607f1b03608084901c16617fff60701b811115610b8057600080fd5b6001600160801b0319858116908516141580610ba95750617fff60701b826001600160801b0316105b610bb257600080fd5b6001600160801b03198581169085161415610bd2576000925050506103d4565b6001607f1b608086811c82118015929187901c919091101590610c24578015610c1557826001600160801b0316846001600160801b031611610c15576001610c19565b6000195b9450505050506103d4565b8015610c375760019450505050506103d4565b826001600160801b0316846001600160801b031611610c5857600019610c19565b60019450505050506103d4565b600081610c7457506000919050565b6000808313610c865782600003610c88565b825b90506000610c9582612813565b90506070811015610cae578060700382901b9150610cc1565b6070811115610cc1576070810382901c91505b6001600160701b03909116613fff820160701b17906000841215610ce9576001607f1b821791505b5060801b92915050565b919050565b6000617fff60f084811c8216919084901c811690821415610d3e5780617fff1415610d2d575061ffff60ef1b91506103d49050565b505050600160ff1b811682186103d4565b80617fff1415610d82576dffffffffffffffffffffffffffff60801b841615610d71575061ffff60ef1b91506103d49050565b505050808218600160ff1b166103d4565b600160801b600160ff1b038416610dcc57600160801b600160ff1b038516610db4575061ffff60ef1b91506103d49050565b505050808218600160ff1b16617fff60f01b176103d4565b6001600160701b03608085901c1681610de85760019150610def565b600160701b175b6001600160701b03608087901c1683610e2e578015610e29576000610e1382612813565b6001955060e20393840160711901939190911b90505b610e38565b600160701b1760721b5b818181610e4757610e47613038565b04905080610e7357600160ff1b87871816610e63576000610c19565b600160ff1b9450505050506103d4565b6001606c1b811015610e8757610e8761300c565b6000600160731b821015610ec657600160721b821015610ebb57600160711b821015610eb4576070610ebe565b6071610ebe565b60725b60ff16610ecf565b610ecf82612813565b905083614071018186011115610eed57617fff945060009150610f80565b83818601613ffc011015610f08576000945060009150610f80565b83818601613f8c011015610f55578385613ffc011115610f33578385613ffc010382901b9150610f4c565b8385613ffc011015610f4c57613ffc8585030382901c91505b60009450610f80565b6070811115610f68576070810382901c91505b6001600160701b038216915083818601613f8d010394505b81607086901b888a186001607f1b60801b1660801c6001600160801b0316171760801b955050505050506103d4565b600081610fbe57506000919050565b816000610fca82612813565b90506070811015610fe3578060700382901b9150610ff6565b6070811115610ff6576070810382901c91505b613fff0160701b6001600160701b03919091161760801b92915050565b6000617fff60f084811c8216919084901c8116908214156110b25780617fff1415611091576001600160801b0319858116908516141561105e57505050600160ff1b811682186103d4565b600160ff1b6001600160801b0319868618161415611081575050508181176103d4565b5061ffff60ef1b91506103d49050565b600160801b600160ff1b038416610d2d575061ffff60ef1b91506103d49050565b80617fff14156110ee57600160801b600160ff1b0385166110dd575061ffff60ef1b91506103d49050565b505050600160ff1b821681186103d4565b6001600160701b03608086901c168261110a5760019250611111565b600160701b175b6001600160701b03608086901c168261112d5760019250611134565b600160701b175b908102908161115157600160ff1b87871816610e63576000610c19565b928201926000600160e11b83101561118457600160e01b83101561117d5761117883612813565b611187565b60e0611187565b60e15b905061407081860110156111a257600094506000925061123f565b6140e081860110156111e5576140708510156111c757846140700383901c92506111dc565b6140708511156111dc57614070850383901b92505b6000945061123f565b61c0dd81860111156111ff57617fff94506000925061123f565b6070811115611216576070810383901c9250611229565b6070811015611229578060700383901b92505b6001600160701b03831692506140df8186010394505b82607086901b888a186001607f1b60801b1660801c6001600160801b0316171760801b955050505050506103d4565b60006103d183600160ff1b84186128b1565b6000617fff60f083901c16613fff81101561129e5750600092915050565b6001607f1b608084901c106112b257600080fd5b6140fe8111156112c157600080fd5b600160701b6001600160701b03608085901c161761406f8210156112eb5761406f8290031c6108cc565b61406f8211156108cc5761406e1982011b9392505050565b60006001607f1b608083901c1115611321575061ffff60ef1b919050565b613fff60f01b6001600160801b03198316141561134057506000919050565b617fff60f083901c811690811415611359575090919050565b6001600160701b03608084901c1681611375576001915061137c565b600160701b175b8061139257506001600160f01b03199392505050565b600061406f81613fff85106113b85750600f9290921b9160009150613ffe1984016113f7565b60019250600160701b84106113da5784613ffe039050600f84901b93506113f7565b60006113e585612813565b607f8190039590951b9461406d039150505b836001607f1b141561142b57821561140d576001015b600061141882612813565b60700392839003929190911b9050611479565b60008361143957600061143c565b60015b60ff1690505b600160701b8210156114775793800260ff81901c607f81019190911c94600019939093019260019290921b9082180190611442565b505b806001600160701b0316607083901b8461149457600061149a565b6001607f1b5b6001600160801b0316171760801b979650505050505050565b60006001607f1b608083901c90811190617fff60f085901c8116916001600160701b031690821480156114e557508015155b156114f9575061ffff60ef1b949350505050565b61400d82111561151e578261151357617fff60f01b61088a565b600095945050505050565b613f7f8210156115375750613fff60f01b949350505050565b81611545576001915061154c565b600160701b175b613fef82111561156257613fee1982011b611574565b613fef82101561157457613fef8290031c5b828015611585575061203760811b81115b1561159557506000949350505050565b821580156115b45750713fffffffffffffffffffffffffffffffffff81115b156115c85750617fff60f01b949350505050565b6001600160801b0381169060801c8380156115e257508115155b156115ee579019906001015b6001607f1b828116156116125770016a09e667f3bcc908b2fb1366ea957d3e0260801c5b6001607e1b831615611635577001306fe0a31b7152de8d5a46305c85edec0260801c5b6001607d1b831615611658577001172b83c7d517adcdf7c8c50eb14a791f0260801c5b6001607c1b83161561167b5770010b5586cf9890f6298b92b71842a983630260801c5b6001607b1b83161561169e577001059b0d31585743ae7c548eb68ca417fd0260801c5b6001607a1b8316156116c157700102c9a3e778060ee6f7caca4f7a29bde80260801c5b600160791b8316156116e45770010163da9fb33356d84a66ae336dcdfa3f0260801c5b600160781b83161561170757700100b1afa5abcbed6129ab13ec11dc95430260801c5b600160771b83161561172a5770010058c86da1c09ea1ff19d294cf2f679b0260801c5b600160761b83161561174d577001002c605e2e8cec506d21bfc89a23a00f0260801c5b600160751b83161561177057700100162f3904051fa128bca9c55c31e5df0260801c5b600160741b831615611793577001000b175effdc76ba38e31671ca9397250260801c5b600160731b8316156117b657700100058ba01fb9f96d6cacd4b180917c3d0260801c5b600160721b8316156117d95770010002c5cc37da9491d0985c348c68e7b30260801c5b600160711b8316156117fc577001000162e525ee054754457d59952920260260801c5b600160701b83161561181f5770010000b17255775c040618bf4a4ade83fc0260801c5b6001606f1b831615611842577001000058b91b5bc9ae2eed81e9b7d4cfab0260801c5b6001606e1b83161561186557700100002c5c89d5ec6ca4d7c8acc017b7c90260801c5b6001606d1b8316156118885770010000162e43f4f831060e02d839a9d16d0260801c5b6001606c1b8316156118ab57700100000b1721bcfc99d9f890ea069117630260801c5b6001606b1b8316156118ce5770010000058b90cf1e6d97f9ca14dbcc16280260801c5b6001606a1b8316156118f1577001000002c5c863b73f016468f6bac5ca2b0260801c5b600160691b83161561191457700100000162e430e5a18f6119e3c02282a50260801c5b600160681b831615611937577001000000b1721835514b86e6d96efd1bfe0260801c5b600160671b83161561195a57700100000058b90c0b48c6be5df846c5b2ef0260801c5b600160661b83161561197d5770010000002c5c8601cc6b9e94213c72737a0260801c5b600160651b8316156119a0577001000000162e42fff037df38aa2b219f060260801c5b600160641b8316156119c35770010000000b17217fba9c739aa5819f44f90260801c5b600160631b8316156119e6577001000000058b90bfcdee5acd3c1cedc8230260801c5b600160621b831615611a0957700100000002c5c85fe31f35a6a30da1be500260801c5b600160611b831615611a2c5770010000000162e42ff0999ce3541b9fffcf0260801c5b600160601b831615611a4f57700100000000b17217f80f4ef5aadda455540260801c5b6001605f1b831615611a725770010000000058b90bfbf8479bd5a81b51ad0260801c5b6001605e1b831615611a95577001000000002c5c85fdf84bd62ae30a74cc0260801c5b6001605d1b831615611ab857700100000000162e42fefb2fed257559bdaa0260801c5b6001605c1b831615611adb577001000000000b17217f7d5a7716bba4a9ae0260801c5b6001605b1b831615611afe57700100000000058b90bfbe9ddbac5e109cce0260801c5b6001605a1b831615611b215770010000000002c5c85fdf4b15de6f17eb0d0260801c5b600160591b831615611b44577001000000000162e42fefa494f1478fde050260801c5b600160581b831615611b675770010000000000b17217f7d20cf927c8e94c0260801c5b600160571b831615611b8a577001000000000058b90bfbe8f71cb4e4b33d0260801c5b600160561b831615611bad57700100000000002c5c85fdf477b662b269450260801c5b600160551b831615611bd05770010000000000162e42fefa3ae53369388c0260801c5b600160541b831615611bf357700100000000000b17217f7d1d351a389d400260801c5b600160531b831615611c165770010000000000058b90bfbe8e8b2d3d4ede0260801c5b600160521b831615611c39577001000000000002c5c85fdf4741bea6e77e0260801c5b600160511b831615611c5c57700100000000000162e42fefa39fe95583c20260801c5b600160501b831615611c7f577001000000000000b17217f7d1cfb72b45e10260801c5b6980000000000000000000831615611ca857700100000000000058b90bfbe8e7cc35c3f00260801c5b6940000000000000000000831615611cd15770010000000000002c5c85fdf473e242ea380260801c5b6920000000000000000000831615611cfa577001000000000000162e42fefa39f02b772c0260801c5b6910000000000000000000831615611d235770010000000000000b17217f7d1cf7d83c1a0260801c5b6908000000000000000000831615611d4c577001000000000000058b90bfbe8e7bdcbe2e0260801c5b6904000000000000000000831615611d7557700100000000000002c5c85fdf473dea871f0260801c5b6902000000000000000000831615611d9e5770010000000000000162e42fefa39ef44d910260801c5b6901000000000000000000831615611dc757700100000000000000b17217f7d1cf79e9490260801c5b68800000000000000000831615611def5770010000000000000058b90bfbe8e7bce5440260801c5b68400000000000000000831615611e17577001000000000000002c5c85fdf473de6eca0260801c5b68200000000000000000831615611e3f57700100000000000000162e42fefa39ef366f0260801c5b68100000000000000000831615611e67577001000000000000000b17217f7d1cf79afa0260801c5b68080000000000000000831615611e8f57700100000000000000058b90bfbe8e7bcd6d0260801c5b68040000000000000000831615611eb75770010000000000000002c5c85fdf473de6b20260801c5b68020000000000000000831615611edf577001000000000000000162e42fefa39ef3580260801c5b600160401b831615611f025770010000000000000000b17217f7d1cf79ab0260801c5b678000000000000000831615611f29577001000000000000000058b90bfbe8e7bcd50260801c5b674000000000000000831615611f5057700100000000000000002c5c85fdf473de6a0260801c5b672000000000000000831615611f775770010000000000000000162e42fefa39ef340260801c5b671000000000000000831615611f9e57700100000000000000000b17217f7d1cf7990260801c5b670800000000000000831615611fc55770010000000000000000058b90bfbe8e7bcc0260801c5b670400000000000000831615611fec577001000000000000000002c5c85fdf473de50260801c5b67020000000000000083161561201357700100000000000000000162e42fefa39ef20260801c5b67010000000000000083161561203a577001000000000000000000b17217f7d1cf780260801c5b668000000000000083161561206057700100000000000000000058b90bfbe8e7bb0260801c5b66400000000000008316156120865770010000000000000000002c5c85fdf473dd0260801c5b66200000000000008316156120ac577001000000000000000000162e42fefa39ee0260801c5b66100000000000008316156120d25770010000000000000000000b17217f7d1cf60260801c5b66080000000000008316156120f8577001000000000000000000058b90bfbe8e7a0260801c5b660400000000000083161561211e57700100000000000000000002c5c85fdf473c0260801c5b66020000000000008316156121445770010000000000000000000162e42fefa39d0260801c5b660100000000000083161561216a57700100000000000000000000b17217f7d1ce0260801c5b6580000000000083161561218f5770010000000000000000000058b90bfbe8e60260801c5b654000000000008316156121b4577001000000000000000000002c5c85fdf4720260801c5b652000000000008316156121d957700100000000000000000000162e42fefa380260801c5b651000000000008316156121fe577001000000000000000000000b17217f7d1b0260801c5b6508000000000083161561222357700100000000000000000000058b90bfbe8d0260801c5b650400000000008316156122485770010000000000000000000002c5c85fdf460260801c5b6502000000000083161561226d577001000000000000000000000162e42fefa20260801c5b650100000000008316156122925770010000000000000000000000b17217f7d00260801c5b6480000000008316156122b6577001000000000000000000000058b90bfbe70260801c5b6440000000008316156122da57700100000000000000000000002c5c85fdf30260801c5b6420000000008316156122fe5770010000000000000000000000162e42fef90260801c5b64100000000083161561232257700100000000000000000000000b17217f7c0260801c5b6408000000008316156123465770010000000000000000000000058b90bfbd0260801c5b64040000000083161561236a577001000000000000000000000002c5c85fde0260801c5b64020000000083161561238e57700100000000000000000000000162e42fee0260801c5b6401000000008316156123b2577001000000000000000000000000b17217f60260801c5b63800000008316156123d557700100000000000000000000000058b90bfa0260801c5b63400000008316156123f85770010000000000000000000000002c5c85fc0260801c5b632000000083161561241b577001000000000000000000000000162e42fd0260801c5b631000000083161561243e5770010000000000000000000000000b17217e0260801c5b6308000000831615612461577001000000000000000000000000058b90be0260801c5b630400000083161561248457700100000000000000000000000002c5c85e0260801c5b63020000008316156124a75770010000000000000000000000000162e42e0260801c5b63010000008316156124ca57700100000000000000000000000000b172160260801c5b628000008316156124ec5770010000000000000000000000000058b90a0260801c5b6240000083161561250e577001000000000000000000000000002c5c840260801c5b6220000083161561253057700100000000000000000000000000162e410260801c5b62100000831615612552577001000000000000000000000000000b17200260801c5b6208000083161561257457700100000000000000000000000000058b8f0260801c5b620400008316156125965770010000000000000000000000000002c5c70260801c5b620200008316156125b8577001000000000000000000000000000162e30260801c5b620100008316156125da5770010000000000000000000000000000b1710260801c5b6180008316156125fb577001000000000000000000000000000058b80260801c5b61400083161561261c57700100000000000000000000000000002c5b0260801c5b61200083161561263d5770010000000000000000000000000000162d0260801c5b61100083161561265e57700100000000000000000000000000000b160260801c5b61080083161561267f5770010000000000000000000000000000058a0260801c5b6104008316156126a0577001000000000000000000000000000002c40260801c5b6102008316156126c1577001000000000000000000000000000001610260801c5b6101008316156126e2577001000000000000000000000000000000b00260801c5b6080831615612702577001000000000000000000000000000000570260801c5b60408316156127225770010000000000000000000000000000002b0260801c5b6020831615612742577001000000000000000000000000000000150260801c5b60108316156127625770010000000000000000000000000000000a0260801c5b6008831615612782577001000000000000000000000000000000040260801c5b60048316156127a2577001000000000000000000000000000000010260801c5b846127c357600f81901c6001600160701b03169050613fff820191506127f2565b613ffe82116127e857600f81901c6001600160701b0316905081613fff0391506127f2565b600091613fee19011c5b60709190911b1760801b95945050505050565b60006103d161042984610faf565b600080821161282157600080fd5b6000600160801b831061283657608092831c92015b600160401b831061284957604092831c92015b640100000000831061285d57602092831c92015b62010000831061286f57601092831c92015b610100831061288057600892831c92015b6010831061289057600492831c92015b600483106128a057600292831c92015b600283106103d45760010192915050565b6000617fff60f084811c8216919084901c8116908214156128ff5780617fff14156128f5576001600160801b031985811690851614156110815784925050506103d4565b84925050506103d4565b80617fff14156129135783925050506103d4565b6001607f1b608086901c90811015906001600160701b0316836129395760019350612940565b600160701b175b6001607f1b608087901c90811015906001600160701b031684612966576001945061296d565b600160701b175b8261299d576001600160801b03198816600160ff1b1461298d5787612990565b60005b96505050505050506103d4565b806129bd576001600160801b03198916600160ff1b1461298d5788612990565b8486038415158315151415612ac85760708113156129e457899750505050505050506103d4565b60008113156129f65790811c90612a25565b606f19811215612a0f57889750505050505050506103d4565b6000811215612a25578060000384901c93508596505b92810192600160711b8410612a40576001968701969390931c925b86617fff1415612a725784612a5a57617fff60f01b612a64565b6001600160f01b03195b9750505050505050506103d4565b600160701b841015612a875760009650612a94565b6001600160701b03841693505b83607088901b86612aa6576000612aac565b6001607f1b5b6001600160801b0316171760801b9750505050505050506103d4565b6000811315612ae357600184901b9350600187039650612afa565b6000811215612afa57600182901b91506001860396505b6070811315612b0c5760019150612b59565b6001811315612b29576001810360018303901c6001019150612b59565b606f19811215612b3c5760019350612b59565b600019811215612b59576001816000030360018503901c60010193505b818410612b6a578184039350612b73565b83820393508294505b83612b895750600096506103d495505050505050565b6000612b9485612813565b90508060711415612bba57600185901c6001600160701b03169450600188019750612c09565b6070811015612bfc57607081900380891115612be9578086901b6001600160701b031695508089039850612bf6565b600098600019019590951b945b50612c09565b6001600160701b03851694505b87617fff1415612c3c5785612c2357617fff60f01b612c2d565b6001600160f01b03195b985050505050505050506103d4565b84607089901b87612c4e576000612c54565b6001607f1b5b6001600160801b0316171760801b985050505050505050506103d4565b80356001600160801b031981168114610cf357600080fd5b600060208284031215612c9b57600080fd5b6103d182612c71565b60008060408385031215612cb757600080fd5b612cc083612c71565b9150612cce60208401612c71565b90509250929050565b60008060008060808587031215612ced57600080fd5b612cf685612c71565b9350612d0460208601612c71565b93969395505050506040820135916060013590565b600080600060608486031215612d2e57600080fd5b612d3784612c71565b925060208401358060000b8114612d4d57600080fd5b9150612d5b60408501612c71565b90509250925092565b60008060408385031215612d7757600080fd5b612d8083612c71565b946020939093013593505050565b60008060408385031215612da157600080fd5b50508035926020909101359150565b600060c08284031215612dc257600080fd5b50919050565b60006101608284031215612dc257600080fd5b600060208284031215612ded57600080fd5b5035919050565b600080600060608486031215612e0957600080fd5b505081359360208301359350604090920135919050565b60008060008060808587031215612e3657600080fd5b5050823594602084013594506040840135936060013592509050565b600080600080600060a08688031215612e6a57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b6020808252600a908201526907072696365203d3d20360b41b604082015260600190565b60008219821115612ec457612ec4613022565b500190565b600082612ee657634e487b7160e01b600052601260045260246000fd5b500490565b600181815b80851115612f26578160001904821115612f0c57612f0c613022565b80851615612f1957918102915b93841c9390800290612ef0565b509250929050565b60006103d18383600082612f44575060016103d4565b81612f51575060006103d4565b8160018114612f675760028114612f7157612f8d565b60019150506103d4565b60ff841115612f8257612f82613022565b50506001821b6103d4565b5060208310610133831016604e8410600b8410161715612fb0575081810a6103d4565b612fba8383612eeb565b8060001904821115612fce57612fce613022565b029392505050565b6000816000190483118215151615612ff057612ff0613022565b500290565b60008282101561300757613007613022565b500390565b634e487b7160e01b600052600160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fdfea2646970667358221220764f8b8880f52f15d145c912690575ae72773c828e470a809683b480bb91c6cb64736f6c63430008070033";

export class PoolSwapLibrary__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PoolSwapLibrary> {
    return super.deploy(overrides || {}) as Promise<PoolSwapLibrary>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PoolSwapLibrary {
    return super.attach(address) as PoolSwapLibrary;
  }
  connect(signer: Signer): PoolSwapLibrary__factory {
    return super.connect(signer) as PoolSwapLibrary__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolSwapLibraryInterface {
    return new utils.Interface(_abi) as PoolSwapLibraryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolSwapLibrary {
    return new Contract(address, _abi, signerOrProvider) as PoolSwapLibrary;
  }
}
