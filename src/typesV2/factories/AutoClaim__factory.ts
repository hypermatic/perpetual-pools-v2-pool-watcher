/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AutoClaim, AutoClaimInterface } from "../AutoClaim";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolFactoryAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "poolCommitter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "updateIntervalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "PaidClaimRequest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "poolCommitter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "newReward",
        type: "uint256",
      },
    ],
    name: "PaidClaimRequestUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "poolCommitter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "PaidRequestExecution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "poolCommitter",
        type: "address",
      },
    ],
    name: "RequestWithdrawn",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "updateIntervalId",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
        ],
        internalType: "struct IAutoClaim.ClaimRequest",
        name: "request",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "currentUpdateIntervalId",
        type: "uint256",
      },
    ],
    name: "checkClaim",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "poolCommitter",
        type: "address",
      },
    ],
    name: "checkUserClaim",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimRequests",
    outputs: [
      {
        internalType: "uint128",
        name: "updateIntervalId",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "makePaidClaimRequest",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "poolCommitterAddresses",
        type: "address[]",
      },
    ],
    name: "multiPaidClaimMultiplePoolCommitters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "poolCommitterAddress",
        type: "address",
      },
    ],
    name: "multiPaidClaimSinglePoolCommitter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "poolCommitterAddress",
        type: "address",
      },
    ],
    name: "paidClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poolCommitter",
        type: "address",
      },
    ],
    name: "withdrawClaimRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "withdrawUserClaimRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161156438038061156483398101604081905261002f9161009e565b6001600160a01b0381166100895760405162461bcd60e51b815260206004820152601860248201527f506f6f6c466163746f72792061646472657373203d3d20300000000000000000604482015260640160405180910390fd5b60601b6001600160601b0319166080526100ce565b6000602082840312156100b057600080fd5b81516001600160a01b03811681146100c757600080fd5b9392505050565b60805160601c61145561010f6000396000818161021f0152818161035f015281816104cc0152818161073301528181610ac00152610c9201526114556000f3fe60806040526004361061008a5760003560e01c8063883e9e4811610059578063883e9e48146101305780638d68dd61146101505780639b42f47e146101b7578063c76ac728146101ca578063f009fc08146101ea57600080fd5b806307119aeb14610099578063351ea38a146100bb5780634c830642146100f057806384de06e41461011057600080fd5b3661009457600080fd5b600080fd5b3480156100a557600080fd5b506100b96100b436600461116a565b61020a565b005b3480156100c757600080fd5b506100db6100d636600461129a565b610314565b60405190151581526020015b60405180910390f35b3480156100fc57600080fd5b506100b961010b36600461116a565b610340565b34801561011c57600080fd5b506100b961012b3660046111b8565b6104aa565b34801561013c57600080fd5b506100db61014b366004611185565b61065b565b34801561015c57600080fd5b5061019861016b366004611185565b6000602081815292815260408082209093529081522080546001909101546001600160801b039091169082565b604080516001600160801b0390931683526020830191909152016100e7565b6100b96101c536600461116a565b61071e565b3480156101d657600080fd5b506100b96101e5366004611185565b610aa1565b3480156101f657600080fd5b506100b961020536600461120c565b610c28565b6040516359e86a9960e01b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906359e86a999060240160206040518083038186803b15801561026957600080fd5b505afa15801561027d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a19190611278565b6102c65760405162461bcd60e51b81526004016102bd90611369565b60405180910390fd5b6001600160a01b038116600090815260208181526040808320338452909152812060018101805482546001600160801b031916909255919091558015610310576103108282610ea8565b5050565b81516000906001600160801b031615801590610339575082516001600160801b031682115b9392505050565b6040516359e86a9960e01b81526001600160a01b0382811660048301527f000000000000000000000000000000000000000000000000000000000000000016906359e86a999060240160206040518083038186803b1580156103a157600080fd5b505afa1580156103b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d99190611278565b6103f55760405162461bcd60e51b81526004016102bd90611332565b336000908152602081815260408083206001600160a01b03851684529091529020546001600160801b0316156104a757336000908152602081815260408083206001600160a01b0385168452909152812060018101805482546001600160801b03191690925591909155801561046f5761046f3382610ea8565b6040516001600160a01b0383169033907fbeb52c9358dfd474b9e79cc7bb7c88a2079664f938ff899c7a54bbaa5e54b08a90600090a3505b50565b6040516359e86a9960e01b81526001600160a01b0382811660048301526000917f0000000000000000000000000000000000000000000000000000000000000000909116906359e86a999060240160206040518083038186803b15801561051057600080fd5b505afa158015610524573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105489190611278565b6105645760405162461bcd60e51b81526004016102bd90611332565b60008290506000816001600160a01b0316639d03132e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156105a457600080fd5b505afa1580156105b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105dc9190611315565b6001600160801b0316905060005b8581101561064257610624878783818110610607576106076113f4565b905060200201602081019061061c919061116a565b868585610fc6565b61062e90856113ab565b93508061063a816113c3565b9150506105ea565b508215610653576106533384610ea8565b505050505050565b6001600160a01b038083166000908152602081815260408083209385168084529382528083208151808301835281546001600160801b03168152600190910154818401528151634e81899760e11b8152915193946103399491939092639d03132e9260048083019392829003018186803b1580156106d857600080fd5b505afa1580156106ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107109190611315565b6001600160801b0316610314565b6040516359e86a9960e01b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906359e86a999060240160206040518083038186803b15801561077d57600080fd5b505afa158015610791573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b59190611278565b6107d15760405162461bcd60e51b81526004016102bd90611369565b6001600160a01b03811660009081526020818152604080832033808552925290912080549091906001600160801b031680156109cf57816001600160a01b0316639d03132e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561084057600080fd5b505afa158015610854573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108789190611315565b6001600160801b0316816001600160801b03161015610975576001838101546001600160a01b0386811660008181526020818152604080832033845290915280822080546001600160801b0319168155909501559251630f41a04d60e11b81526004810193909352909190841690631e83409a90602401600060405180830381600087803b15801561090957600080fd5b505af115801561091d573d6000803e3d6000fd5b505050506000811115610934576109348582610ea8565b600184015460405133906001600160a01b038816907ffc1ef6f920271c53bdf1b6aa6a98b1cd7baa573c736975d7eb1f85b2f0c3d7f390600090a4506109cf565b3483600101600082825461098991906113ab565b9091555050600183015460405133906001600160a01b038716907f1b0cd6fbb8d6f8911969df04996d8d67f926c059c09a2df27305bb1b36b5917c90600090a450505050565b816001600160a01b031663d4c4e2836040518163ffffffff1660e01b815260040160206040518083038186803b158015610a0857600080fd5b505afa158015610a1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a409190611315565b83546001600160801b0319166001600160801b03821617845534600185018190556040519192509033906001600160a01b038716907f1b0cd6fbb8d6f8911969df04996d8d67f926c059c09a2df27305bb1b36b5917c90600090a450505050565b6040516359e86a9960e01b81526001600160a01b0382811660048301527f000000000000000000000000000000000000000000000000000000000000000016906359e86a999060240160206040518083038186803b158015610b0257600080fd5b505afa158015610b16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3a9190611278565b610b7e5760405162461bcd60e51b815260206004820152601560248201527424b73b30b634b2102837b7b621b7b6b6b4ba3a32b960591b60448201526064016102bd565b60008190506000816001600160a01b0316639d03132e6040518163ffffffff1660e01b815260040160206040518083038186803b158015610bbe57600080fd5b505afa158015610bd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf69190611315565b6001600160801b031690506000610c0f85858585610fc6565b90508015610c2157610c213382610ea8565b5050505050565b828114610c835760405162461bcd60e51b815260206004820152602360248201527f537570706c69656420617272617973206d7573742062652073616d65206c656e6044820152620cee8d60eb1b60648201526084016102bd565b600083815b81811015610e9b577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166359e86a99868684818110610cd157610cd16113f4565b9050602002016020810190610ce6919061116a565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260240160206040518083038186803b158015610d2557600080fd5b505afa158015610d39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5d9190611278565b610d795760405162461bcd60e51b81526004016102bd90611332565b6000858583818110610d8d57610d8d6113f4565b9050602002016020810190610da2919061116a565b90506000816001600160a01b0316639d03132e6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ddf57600080fd5b505afa158015610df3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e179190611315565b6001600160801b03169050610e7a898985818110610e3757610e376113f4565b9050602002016020810190610e4c919061116a565b888886818110610e5e57610e5e6113f4565b9050602002016020810190610e73919061116a565b8484610fc6565b610e8490866113ab565b945050508080610e93906113c3565b915050610c88565b5081156106535761065333835b80471015610ef85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016102bd565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610f45576040519150601f19603f3d011682016040523d82523d6000602084013e610f4a565b606091505b5050905080610fc15760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016102bd565b505050565b6001600160a01b038085166000908152602081815260408083209387168352928152828220835180850190945280546001600160801b031684526001015490830152906110138184610314565b156110f4576001600160a01b038681166000818152602081815260408083208a8616845290915280822080546001600160801b03191681556001019190915551630f41a04d60e11b8152600481019190915290851690631e83409a90602401600060405180830381600087803b15801561108c57600080fd5b505af11580156110a0573d6000803e3d6000fd5b505050508060200151856001600160a01b0316876001600160a01b03167ffc1ef6f920271c53bdf1b6aa6a98b1cd7baa573c736975d7eb1f85b2f0c3d7f360405160405180910390a46020015190506110fa565b60009150505b949350505050565b80356001600160a01b038116811461111957600080fd5b919050565b60008083601f84011261113057600080fd5b50813567ffffffffffffffff81111561114857600080fd5b6020830191508360208260051b850101111561116357600080fd5b9250929050565b60006020828403121561117c57600080fd5b61033982611102565b6000806040838503121561119857600080fd5b6111a183611102565b91506111af60208401611102565b90509250929050565b6000806000604084860312156111cd57600080fd5b833567ffffffffffffffff8111156111e457600080fd5b6111f08682870161111e565b9094509250611203905060208501611102565b90509250925092565b6000806000806040858703121561122257600080fd5b843567ffffffffffffffff8082111561123a57600080fd5b6112468883890161111e565b9096509450602087013591508082111561125f57600080fd5b5061126c8782880161111e565b95989497509550505050565b60006020828403121561128a57600080fd5b8151801515811461033957600080fd5b60008082840360608112156112ae57600080fd5b60408112156112bc57600080fd5b506040516040810181811067ffffffffffffffff821117156112ee57634e487b7160e01b600052604160045260246000fd5b60405283356112fc8161140a565b8152602084810135908201529460409093013593505050565b60006020828403121561132757600080fd5b81516103398161140a565b6020808252601f908201527f496e76616c696420706f6f6c20636f6d6d697474657220636f6e747261637400604082015260600190565b60208082526022908201527f6d73672e73656e646572206e6f742076616c696420506f6f6c436f6d6d69747460408201526132b960f11b606082015260800190565b600082198211156113be576113be6113de565b500190565b60006000198214156113d7576113d76113de565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160801b03811681146104a757600080fdfea26469706673582212201cfd23664d66a22d9d9dd7b614306a5c31b6b02f85081e6730cd5d3ffda2f66664736f6c63430008070033";

export class AutoClaim__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _poolFactoryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AutoClaim> {
    return super.deploy(
      _poolFactoryAddress,
      overrides || {}
    ) as Promise<AutoClaim>;
  }
  getDeployTransaction(
    _poolFactoryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_poolFactoryAddress, overrides || {});
  }
  attach(address: string): AutoClaim {
    return super.attach(address) as AutoClaim;
  }
  connect(signer: Signer): AutoClaim__factory {
    return super.connect(signer) as AutoClaim__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AutoClaimInterface {
    return new utils.Interface(_abi) as AutoClaimInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AutoClaim {
    return new Contract(address, _abi, signerOrProvider) as AutoClaim;
  }
}
