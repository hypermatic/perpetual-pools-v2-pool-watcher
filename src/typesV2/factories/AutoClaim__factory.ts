/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AutoClaim, AutoClaimInterface } from "../AutoClaim";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolFactoryAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "poolCommitter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "updateIntervalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "PaidClaimRequest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "poolCommitter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "newReward",
        type: "uint256",
      },
    ],
    name: "PaidClaimRequestUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "poolCommitter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "PaidRequestExecution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "poolCommitter",
        type: "address",
      },
    ],
    name: "RequestWithdrawn",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "updateIntervalId",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
        ],
        internalType: "struct IAutoClaim.ClaimRequest",
        name: "request",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "currentUpdateIntervalId",
        type: "uint256",
      },
    ],
    name: "checkClaim",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "poolCommitter",
        type: "address",
      },
    ],
    name: "checkUserClaim",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimRequests",
    outputs: [
      {
        internalType: "uint128",
        name: "updateIntervalId",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "makePaidClaimRequest",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "poolCommitterAddresses",
        type: "address[]",
      },
    ],
    name: "multiPaidClaimMultiplePoolCommitters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "poolCommitterAddress",
        type: "address",
      },
    ],
    name: "multiPaidClaimSinglePoolCommitter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "poolCommitterAddress",
        type: "address",
      },
    ],
    name: "paidClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poolCommitter",
        type: "address",
      },
    ],
    name: "withdrawClaimRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "withdrawUserClaimRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610f81380380610f8183398101604081905261002f916100ae565b6001600160a01b0381166100895760405162461bcd60e51b815260206004820152601860248201527f506f6f6c466163746f72792061646472657373203d3d20300000000000000000604482015260640160405180910390fd5b600180546001600160a01b0319166001600160a01b03929092169190911790556100de565b6000602082840312156100c057600080fd5b81516001600160a01b03811681146100d757600080fd5b9392505050565b610e94806100ed6000396000f3fe60806040526004361061008a5760003560e01c8063883e9e4811610059578063883e9e48146101305780638d68dd61146101505780639b42f47e146101b7578063c76ac728146101ca578063f009fc08146101ea57600080fd5b806307119aeb14610099578063351ea38a146100bb5780634c830642146100f057806384de06e41461011057600080fd5b3661009457600080fd5b600080fd5b3480156100a557600080fd5b506100b96100b4366004610be0565b61020a565b005b3480156100c757600080fd5b506100db6100d6366004610d10565b61032b565b60405190151581526020015b60405180910390f35b3480156100fc57600080fd5b506100b961010b366004610be0565b610357565b34801561011c57600080fd5b506100b961012b366004610c2e565b610447565b34801561013c57600080fd5b506100db61014b366004610bfb565b61049a565b34801561015c57600080fd5b5061019861016b366004610bfb565b6000602081815292815260408082209093529081522080546001909101546001600160801b039091169082565b604080516001600160801b0390931683526020830191909152016100e7565b6100b96101c5366004610be0565b61055d565b3480156101d657600080fd5b506100b96101e5366004610bfb565b6108ce565b3480156101f657600080fd5b506100b9610205366004610c82565b610aaf565b6001546040516359e86a9960e01b81523360048201526001600160a01b03909116906359e86a999060240160206040518083038186803b15801561024d57600080fd5b505afa158015610261573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102859190610cee565b6102aa5760405162461bcd60e51b81526004016102a190610da8565b60405180910390fd5b6001600160a01b03811660008181526020818152604080832033845290915280822060010154905181156108fc0292818181858888f193505050501580156102f6573d6000803e3d6000fd5b506001600160a01b0316600090815260208181526040808320338452909152812080546001600160801b031916815560010155565b81516000906001600160801b031615801590610350575082516001600160801b031682115b9392505050565b336000908152602081815260408083206001600160a01b03851684529091529020546001600160801b03161561044457336000818152602081815260408083206001600160a01b038616845290915280822060010154905181156108fc0292818181858888f193505050501580156103d3573d6000803e3d6000fd5b50336000818152602081815260408083206001600160a01b03861680855290835281842080546001600160801b0319168155600101939093558051938452908301919091527fbeb52c9358dfd474b9e79cc7bb7c88a2079664f938ff899c7a54bbaa5e54b08a910160405180910390a15b50565b60005b828110156104945761048284848381811061046757610467610e33565b905060200201602081019061047c9190610be0565b836108ce565b8061048c81610e02565b91505061044a565b50505050565b6001600160a01b038083166000908152602081815260408083209385168084529382528083208151808301835281546001600160801b03168152600190910154818401528151634e81899760e11b8152915193946103509491939092639d03132e9260048083019392829003018186803b15801561051757600080fd5b505afa15801561052b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054f9190610d8b565b6001600160801b031661032b565b6001546040516359e86a9960e01b81523360048201526001600160a01b03909116906359e86a999060240160206040518083038186803b1580156105a057600080fd5b505afa1580156105b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d89190610cee565b6105f45760405162461bcd60e51b81526004016102a190610da8565b6001600160a01b03811660009081526020818152604080832033808552925290912080549091906001600160801b031680156107e757816001600160a01b0316639d03132e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561066357600080fd5b505afa158015610677573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069b9190610d8b565b6001600160801b0316816001600160801b03161015610790576001600160a01b03841660008181526020818152604080832033845290915280822060010154905181156108fc0292818181858888f19350505050158015610700573d6000803e3d6000fd5b506001600160a01b0384811660008181526020818152604080832033845290915280822080546001600160801b03191681556001019190915551630f41a04d60e11b8152600481019190915290831690631e83409a90602401600060405180830381600087803b15801561077357600080fd5b505af1158015610787573d6000803e3d6000fd5b505050506107e7565b348360010160008282546107a49190610dea565b9091555050604051349033906001600160a01b038716907f1b0cd6fbb8d6f8911969df04996d8d67f926c059c09a2df27305bb1b36b5917c90600090a450505050565b816001600160a01b031663d4c4e2836040518163ffffffff1660e01b815260040160206040518083038186803b15801561082057600080fd5b505afa158015610834573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108589190610d8b565b6001600160a01b03851660008181526020818152604080832033808552925280832080546001600160801b0319166001600160801b0387161781553460019091018190559051949550939092917f1b0cd6fbb8d6f8911969df04996d8d67f926c059c09a2df27305bb1b36b5917c91a450505050565b6001600160a01b038083166000908152602081815260408083209385168084529382528083208151808301835281546001600160801b03168152600190910154818401528151634e81899760e11b8152915190948694939092639d03132e9260048083019392829003018186803b15801561094857600080fd5b505afa15801561095c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109809190610d8b565b6001600160801b03169050610995838261032b565b15610aa8576020830151604051339180156108fc02916000818181858888f193505050501580156109ca573d6000803e3d6000fd5b506001600160a01b03858116600081815260208181526040808320898616845290915280822080546001600160801b03191681556001019190915551630f41a04d60e11b8152600481019190915290831690631e83409a90602401600060405180830381600087803b158015610a3f57600080fd5b505af1158015610a53573d6000803e3d6000fd5b505050602080850151604080516001600160a01b03808b1682528916938101939093528201527ffc1ef6f920271c53bdf1b6aa6a98b1cd7baa573c736975d7eb1f85b2f0c3d7f3915060600160405180910390a15b5050505050565b828114610b0a5760405162461bcd60e51b815260206004820152602360248201527f537570706c69656420617272617973206d7573742062652073616d65206c656e6044820152620cee8d60eb1b60648201526084016102a1565b60005b83811015610aa857610b66858583818110610b2a57610b2a610e33565b9050602002016020810190610b3f9190610be0565b848484818110610b5157610b51610e33565b90506020020160208101906101e59190610be0565b80610b7081610e02565b915050610b0d565b80356001600160a01b0381168114610b8f57600080fd5b919050565b60008083601f840112610ba657600080fd5b50813567ffffffffffffffff811115610bbe57600080fd5b6020830191508360208260051b8501011115610bd957600080fd5b9250929050565b600060208284031215610bf257600080fd5b61035082610b78565b60008060408385031215610c0e57600080fd5b610c1783610b78565b9150610c2560208401610b78565b90509250929050565b600080600060408486031215610c4357600080fd5b833567ffffffffffffffff811115610c5a57600080fd5b610c6686828701610b94565b9094509250610c79905060208501610b78565b90509250925092565b60008060008060408587031215610c9857600080fd5b843567ffffffffffffffff80821115610cb057600080fd5b610cbc88838901610b94565b90965094506020870135915080821115610cd557600080fd5b50610ce287828801610b94565b95989497509550505050565b600060208284031215610d0057600080fd5b8151801515811461035057600080fd5b6000808284036060811215610d2457600080fd5b6040811215610d3257600080fd5b506040516040810181811067ffffffffffffffff82111715610d6457634e487b7160e01b600052604160045260246000fd5b6040528335610d7281610e49565b8152602084810135908201529460409093013593505050565b600060208284031215610d9d57600080fd5b815161035081610e49565b60208082526022908201527f6d73672e73656e646572206e6f742076616c696420506f6f6c436f6d6d69747460408201526132b960f11b606082015260800190565b60008219821115610dfd57610dfd610e1d565b500190565b6000600019821415610e1657610e16610e1d565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160801b038116811461044457600080fdfea2646970667358221220760bfb40eca074b41e8d5dfa9c9ae362f95f135506f71a442f57a62d7c7edcff64736f6c63430008070033";

export class AutoClaim__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _poolFactoryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AutoClaim> {
    return super.deploy(
      _poolFactoryAddress,
      overrides || {}
    ) as Promise<AutoClaim>;
  }
  getDeployTransaction(
    _poolFactoryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_poolFactoryAddress, overrides || {});
  }
  attach(address: string): AutoClaim {
    return super.attach(address) as AutoClaim;
  }
  connect(signer: Signer): AutoClaim__factory {
    return super.connect(signer) as AutoClaim__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AutoClaimInterface {
    return new utils.Interface(_abi) as AutoClaimInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AutoClaim {
    return new Contract(address, _abi, signerOrProvider) as AutoClaim;
  }
}
