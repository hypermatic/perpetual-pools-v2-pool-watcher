/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IAutoClaim, IAutoClaimInterface } from "../IAutoClaim";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "poolCommitter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "updateIntervalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "PaidClaimRequest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "poolCommitter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "newReward",
        type: "uint256",
      },
    ],
    name: "PaidClaimRequestUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "poolCommitter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "PaidRequestExecution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "poolCommitter",
        type: "address",
      },
    ],
    name: "RequestWithdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "updateIntervalId",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "reward",
            type: "uint256",
          },
        ],
        internalType: "struct IAutoClaim.ClaimRequest",
        name: "request",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "currentUpdateIntervalId",
        type: "uint256",
      },
    ],
    name: "checkClaim",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "poolCommitter",
        type: "address",
      },
    ],
    name: "checkUserClaim",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "makePaidClaimRequest",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "poolCommitterAddresses",
        type: "address[]",
      },
    ],
    name: "multiPaidClaimMultiplePoolCommitters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "poolCommitterAddress",
        type: "address",
      },
    ],
    name: "multiPaidClaimSinglePoolCommitter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "poolCommitterAddress",
        type: "address",
      },
    ],
    name: "paidClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poolCommitter",
        type: "address",
      },
    ],
    name: "withdrawClaimRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "withdrawUserClaimRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IAutoClaim__factory {
  static readonly abi = _abi;
  static createInterface(): IAutoClaimInterface {
    return new utils.Interface(_abi) as IAutoClaimInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IAutoClaim {
    return new Contract(address, _abi, signerOrProvider) as IAutoClaim;
  }
}
