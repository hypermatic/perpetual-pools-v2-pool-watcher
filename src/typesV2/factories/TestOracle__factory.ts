/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestOracle, TestOracleInterface } from "../TestOracle";

const _abi = [
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "incrementPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    name: "setOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610203806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80637adbf973146100515780637dc0d1d01461006657806398d5fdca14610096578063b5bf6eb6146100a7575b600080fd5b61006461005f366004610146565b6100af565b005b600154610079906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b60005460405190815260200161008d565b61006461012d565b6001546001600160a01b031661010b5760405162461bcd60e51b815260206004820152601a60248201527f4f7261636c652063616e6e6f7420626520302061646472657373000000000000604482015260640160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600160008082825461013f9190610176565b9091555050565b60006020828403121561015857600080fd5b81356001600160a01b038116811461016f57600080fd5b9392505050565b600080821280156001600160ff1b0384900385131615610198576101986101b7565b600160ff1b83900384128116156101b1576101b16101b7565b50500190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220b5b5f9b93e78c5c13e549fc7eab60235ffa184ca65510362c82d560de887ed7c64736f6c63430008070033";

export class TestOracle__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestOracle> {
    return super.deploy(overrides || {}) as Promise<TestOracle>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestOracle {
    return super.attach(address) as TestOracle;
  }
  connect(signer: Signer): TestOracle__factory {
    return super.connect(signer) as TestOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestOracleInterface {
    return new utils.Interface(_abi) as TestOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestOracle {
    return new Contract(address, _abi, signerOrProvider) as TestOracle;
  }
}
