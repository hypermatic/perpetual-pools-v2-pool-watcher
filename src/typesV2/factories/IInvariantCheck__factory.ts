/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IInvariantCheck,
  IInvariantCheckInterface,
} from "../IInvariantCheck";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "InvariantsFail",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "InvariantsHold",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "checkInvariants",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IInvariantCheck__factory {
  static readonly abi = _abi;
  static createInterface(): IInvariantCheckInterface {
    return new utils.Interface(_abi) as IInvariantCheckInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IInvariantCheck {
    return new Contract(address, _abi, signerOrProvider) as IInvariantCheck;
  }
}
